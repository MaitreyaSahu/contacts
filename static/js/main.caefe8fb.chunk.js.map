{"version":3,"sources":["logo.svg","components/AddContact.js","components/ContactListItem.js","App.js","reportWebVitals.js","index.js"],"names":["AddContact","props","useState","firstName","lastName","mobile","email","state","setState","inputChangeHandler","e","nam","target","name","val","value","Paper","component","DialogTitle","DialogContent","divider","Grid","container","direction","justify","alignItems","item","TextField","label","autoFocus","onChange","required","fullWidth","DialogActions","Button","type","onClick","preventDefault","onAdd","onCancel","color","ContactListItem","checked","setChecked","focused","setFocused","contactInfo","avatarName","toUpperCase","ListItem","button","onMouseEnter","console","log","onMouseLeave","selected","ListItemIcon","Checkbox","edge","prevState","onSelectContact","tabIndex","disableRipple","Avatar","ListItemText","primary","secondary","IconButton","onDeleteContact","App","id","status","contacts","setContacts","selectedCount","setSelectedCount","modalOpen","setModalOpen","handleModalClose","handleModalOpen","handleDelete","contact","filter","elem","Object","is","handleContactSelect","isSelected","prev","ListHeaderToolBar","className","List","CheckBox","Typography","variant","length","InputBase","placeholder","map","onAddContact","Dialog","open","onClose","handleAddContact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,oOC2FAA,EA9EI,SAACC,GAClB,IAMA,EAA0BC,mBAAS,CACjCC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,MAAO,KAJT,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAqB,SAACC,GAC1B,IAAIC,EAAMD,EAAEE,OAAOC,KACfC,EAAMJ,EAAEE,OAAOG,MACnBP,EAAS,2BAAKD,GAAN,kBAAcI,EAAMG,MAG9B,OACE,eAACE,EAAA,EAAD,CAAOC,UAAU,OAAjB,UACE,cAACC,EAAA,EAAD,8BACA,cAACC,EAAA,EAAD,CAAeC,SAAO,EAAtB,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,QAAQ,SAASC,WAAW,SAA/D,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEd,KAAK,YACLe,MAAM,aACNC,WAAS,EACTC,SAAUrB,MAGd,cAACY,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEd,KAAK,WACLe,MAAM,YACNG,UAAQ,EACRC,WAAS,EACTF,SAAUrB,MAGd,cAACY,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEd,KAAK,SACLe,MAAM,SACNI,WAAS,EACTF,SAAUrB,MAGd,cAACY,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEd,KAAK,QACLe,MAAM,QACNE,SAAUrB,WAYlB,eAACwB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAlEL,SAAC1B,GACtBA,EAAE2B,iBACFpC,EAAMqC,MAAM/B,GACZN,EAAMsC,YA+D6CC,MAAM,UAArD,iBAGA,cAACN,EAAA,EAAD,CAAQE,QAASnC,EAAMsC,SAAUC,MAAM,YAAvC,2B,iBCQOC,EA7ES,SAACxC,GACvB,MAA8BC,oBAAS,GAAvC,mBAAOwC,EAAP,KAAgBC,EAAhB,KACA,EAA8BzC,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBC,EAAhB,KAwBA,iBAAoD5C,EAAM6C,aAAlD3C,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,OAAQC,EAArC,EAAqCA,MAIjCyC,IAFc5C,EAAYA,EAAU,GAAK,MAC3BC,EAAWA,EAAS,GAAK,KACF4C,cAEzC,OACE,eAACC,EAAA,EAAD,CACEC,QAAM,EACNC,aA/BqB,SAACzC,GACxB0C,QAAQC,IAAI,mBACPX,GACHG,GAAW,IA6BXS,aAxBqB,SAAC5C,GACxB0C,QAAQC,IAAI,2BACPX,GACHG,GAAW,IAsBXU,SAAUb,EAJZ,UAME,cAACc,EAAA,EAAD,UACGZ,EACC,cAACa,EAAA,EAAD,CACEC,KAAK,QACLhB,QAASA,EACTN,QAxBkB,WAC1BO,GAAW,SAACgB,GAAD,OAAgBA,KAE3B1D,EAAM2D,iBAAiBlB,IAsBfmB,UAAW,EACXC,eAAa,IAGf,cAACC,EAAA,EAAD,UAAShB,MAGb,cAACiB,EAAA,EAAD,CACEC,QAAO,UAAK9D,EAAY,IAAMC,GAC9B8D,UACE7D,GAAUC,EAAQ,MAAQA,EAAQ,MASrCsC,EACC,cAACuB,EAAA,EAAD,CACET,KAAK,MACLtB,QAAS,kBAAMnC,EAAMmE,gBAAgBnE,EAAM6C,cAF7C,SAIE,cAAC,IAAD,MAEA,S,mCC4OKuB,MAlRf,WAoFE,MAAgCnE,mBAAS,CACvC,CACEoE,GAAI,KACJnE,UAAW,MACXC,SAAU,MACVE,MAAO,SACPD,OAAQ,OACRkE,OAAQ,YAPZ,mBAAOC,EAAP,KAAiBC,EAAjB,KAWA,EAA0CvE,mBAAS,GAAnD,mBAAOwE,EAAP,KAAsBC,EAAtB,KAEA,EAAkCzE,oBAAS,GAA3C,mBAAO0E,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,WACvBD,GAAa,IAGTE,EAAkB,WACtBF,GAAa,IAQTG,EAAe,SAACC,GACpBR,GAAY,SAACd,GAAD,OACVA,EAAUuB,QAAO,SAACC,GAAD,OAAWC,OAAOC,GAAGF,EAAMF,UAI1CK,EAAsB,SAACC,GAC3BnC,QAAQC,IAAIkC,EAAYb,GAEpBC,EADJY,EACqB,SAACC,GAAD,OAAUA,EAAO,GACjB,SAACA,GAAD,OAAUA,EAAO,KAGlCC,EAAoB,WACxB,OAEE,aADA,CACCzE,EAAA,EAAD,CAAO0E,UAAU,oBAAjB,SACGhB,EAAgB,EACf,mCACE,cAACiB,EAAA,EAAD,UACE,eAAC1C,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,UACE,cAACoC,EAAA,EAAD,CAAUlC,KAAK,YAEjB,cAACM,EAAA,EAAD,CACEC,QACE,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAAK7E,UAAU,OAAnC,SACGyD,EAAgB,gBAKvB,cAACP,EAAA,EAAD,CAAYT,KAAK,MAAMtB,QAAS2C,EAAhC,SACE,cAAC,IAAD,aAeR,mCACE,cAACY,EAAA,EAAD,UACE,eAAC1C,EAAA,EAAD,WACE,cAACO,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAUC,KAAK,YAEjB,cAACM,EAAA,EAAD,CACEC,QACE,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAAK7E,UAAU,MAAnC,uBAIFiD,UACE,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,UAAU7E,UAAU,MAAxC,SACGuD,EAASuB,OAAS,gBAIzB,cAACC,EAAA,EAAD,CAAWC,YAAY,oBACvB,cAAC9B,EAAA,EAAD,CAAYT,KAAK,MAAjB,SACE,cAAC,IAAD,MAEF,cAACS,EAAA,EAAD,CAAYT,KAAK,MAAMtB,QAAS2C,EAAhC,SACE,cAAC,IAAD,gBAgDhB,OACE,qCACE,cAAC1D,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAQ,SAAxC,SACE,eAACR,EAAA,EAAD,CAAO0E,UAAU,cAAjB,UACE,cAACD,EAAD,IACA,cAACE,EAAA,EAAD,UACGnB,EAAS0B,KAAI,SAACjB,GACA,8BAA0BA,EAAQ9E,aAC7B8E,EAAQ9E,UAAY8E,EAAQ9E,UAAU,GAAK,MAC3C8E,EAAQ7E,SAAW6E,EAAQ7E,SAAS,GAAK,KAClB4C,cAEzC,OACE,cAAC,EAAD,CAEEF,YAAamC,EACbb,gBAAiBY,EACjBmB,aAAcpB,EACdnB,gBAAiB0B,GAJZL,EAAQ9E,UAAY8E,EAAQ7E,oBAmB7C,cAACgG,EAAA,EAAD,CAAQC,KAAMzB,EAAW0B,QAASxB,EAAlC,SACE,cAAC,EAAD,CACExC,MAAO,SAAC5B,GAAD,OA/JU,SAACA,GACxB+D,GAAY,SAACd,GAAD,4BAAmBA,GAAnB,gBAAmCjD,QAC/C0C,QAAQC,IAAI3C,GA6JQ6F,CAAiB7F,IAC/B6B,SAAUuC,UC9SL0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.caefe8fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  Dialog,\r\n  Paper,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { useState } from \"react\";\r\n\r\nconst AddContact = (props) => {\r\n  const handleAddClick = (e) => {\r\n    e.preventDefault();\r\n    props.onAdd(state);\r\n    props.onCancel();\r\n  };\r\n\r\n  const [state, setState] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    mobile: \"\",\r\n    email: \"\",\r\n  });\r\n\r\n  const inputChangeHandler = (e) => {\r\n    let nam = e.target.name;\r\n    let val = e.target.value;\r\n    setState({ ...state, [nam]: val });\r\n  };\r\n\r\n  return (\r\n    <Paper component=\"form\">\r\n      <DialogTitle>Add New Conatct</DialogTitle>\r\n      <DialogContent divider>\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n          <Grid item>\r\n            <TextField\r\n              name=\"firstName\"\r\n              label=\"First name\"\r\n              autoFocus\r\n              onChange={inputChangeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n              required\r\n              fullWidth\r\n              onChange={inputChangeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              name=\"mobile\"\r\n              label=\"Mobile\"\r\n              fullWidth\r\n              onChange={inputChangeHandler}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              onChange={inputChangeHandler}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* <div></div>\r\n          <Button type=\"submit\" color=\"primary\" onClick={handleAddClick}>\r\n            Add\r\n          </Button>\r\n          <Button color=\"secondary\" onClick={props.onCancel}>\r\n            Cancel\r\n          </Button> */}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button type=\"submit\" onClick={handleAddClick} color=\"primary\">\r\n          Add\r\n        </Button>\r\n        <Button onClick={props.onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default AddContact;\r\n","import { useState } from \"react\";\r\n\r\nimport {\r\n  IconButton,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  Checkbox,\r\n  Avatar,\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { SettingsInputAntennaTwoTone } from \"@material-ui/icons\";\r\n\r\nconst ContactListItem = (props) => {\r\n  const [checked, setChecked] = useState(false);\r\n  const [focused, setFocused] = useState(false);\r\n\r\n  const handleMouseEnter = (e) => {\r\n    console.log(\"handleMouseOver\");\r\n    if (!checked) {\r\n      setFocused(true);\r\n    }\r\n    // checked ? null : setFocused(true);\r\n  };\r\n\r\n  const handleMouseLeave = (e) => {\r\n    console.log(\"mousehandleMouseOutOver\");\r\n    if (!checked) {\r\n      setFocused(false);\r\n    }\r\n    // checked ? null : setFocused(false);\r\n  };\r\n\r\n  const handleCheckedChange = () => {\r\n    setChecked((prevState) => !prevState);\r\n\r\n    props.onSelectContact(!checked);\r\n  };\r\n\r\n  const { firstName, lastName, mobile, email } = { ...props.contactInfo };\r\n\r\n  const fnInitial = firstName ? firstName[0] : \"#\";\r\n  const lnInitial = lastName ? lastName[0] : \"\";\r\n  let avatarName = (fnInitial + lnInitial).toUpperCase();\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      onMouseEnter={handleMouseEnter}\r\n      onMouseLeave={handleMouseLeave}\r\n      selected={checked}\r\n    >\r\n      <ListItemIcon>\r\n        {focused ? (\r\n          <Checkbox\r\n            edge=\"start\"\r\n            checked={checked}\r\n            onClick={handleCheckedChange}\r\n            tabIndex={-1}\r\n            disableRipple\r\n          />\r\n        ) : (\r\n          <Avatar>{avatarName}</Avatar>\r\n        )}\r\n      </ListItemIcon>\r\n      <ListItemText\r\n        primary={`${firstName + \" \" + lastName}`}\r\n        secondary={\r\n          mobile + (email ? \" - \" + email : \"\")\r\n          // <>\r\n          //   <CallIcon /> {contact.mobile}\r\n          //   <MailIcon /> {contact.email}\r\n          // </>\r\n        }\r\n      />\r\n\r\n      {/* <ListItemSecondaryAction> */}\r\n      {focused ? (\r\n        <IconButton\r\n          edge=\"end\"\r\n          onClick={() => props.onDeleteContact(props.contactInfo)}\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      ) : null}\r\n      {/* </ListItemSecondaryAction> */}\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport {\n  AppBar,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListSubheader,\n  ListItemSecondaryAction,\n  Checkbox,\n  Toolbar,\n  Typography,\n  InputBase,\n  Grid,\n  Divider,\n  Dialog,\n  Avatar,\n  Button,\n  Snackbar,\n} from \"@material-ui/core\";\nimport Contact from \"./components/Contact\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TableToolBar from \"./components/TableToolBar\";\nimport AddContactModal from \"./components/AddContactModal\";\nimport { useState } from \"react\";\nimport Modal from \"./hoc/Modal\";\nimport AddContact from \"./components/AddContact\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport CallIcon from \"@material-ui/icons/Call\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ContactListItem from \"./components/ContactListItem\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { CheckBox, Delete } from \"@material-ui/icons\";\nimport IndeterminateCheckBoxIcon from \"@material-ui/icons/IndeterminateCheckBox\";\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\n\nfunction App() {\n  // const contacts = [\n  //   {\n  //     id: \"c1\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c2\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c3\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c4\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c5\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c6\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c7\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c8\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c9\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  //   {\n  //     id: \"c10\",\n  //     firstName: \"abc\",\n  //     lastName: \"def\",\n  //     email: \"saassa\",\n  //     mobile: \"8888\",\n  //     status: \"active\",\n  //   },\n  // ];\n\n  const [contacts, setContacts] = useState([\n    {\n      id: \"c1\",\n      firstName: \"abc\",\n      lastName: \"def\",\n      email: \"saassa\",\n      mobile: \"8888\",\n      status: \"active\",\n    },\n  ]);\n\n  const [selectedCount, setSelectedCount] = useState(0);\n\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const handleModalClose = () => {\n    setModalOpen(false);\n  };\n\n  const handleModalOpen = () => {\n    setModalOpen(true);\n  };\n\n  const handleAddContact = (e) => {\n    setContacts((prevState) => [...prevState, { ...e }]);\n    console.log(e);\n  };\n\n  const handleDelete = (contact) => {\n    setContacts((prevState) =>\n      prevState.filter((elem) => !Object.is(elem, contact))\n    );\n  };\n\n  const handleContactSelect = (isSelected) => {\n    console.log(isSelected, selectedCount);\n    isSelected\n      ? setSelectedCount((prev) => prev + 1)\n      : setSelectedCount((prev) => prev - 1);\n  };\n\n  const ListHeaderToolBar = () => {\n    return (\n      // <ListSubheader>\n      <Paper className=\"list-head-toolbar\">\n        {selectedCount > 0 ? (\n          <>\n            <List>\n              <ListItem>\n                <ListItemIcon>\n                  <CheckBox edge=\"start\" />                  \n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography variant=\"h6\" component=\"span\">\n                      {selectedCount + \" selected\"}\n                    </Typography>\n                  }\n                />\n\n                <IconButton edge=\"end\" onClick={handleModalOpen}>\n                  <Delete />\n                </IconButton>\n              </ListItem>\n            </List>\n            {/* <IconButton edge=\"end\">\n              <CheckBox />\n            </IconButton>\n            <Typography variant=\"h6\" component=\"span\">\n              {selectedCount + \" selected\"}\n            </Typography>\n            <IconButton edge=\"end\">\n              <Delete />\n            </IconButton> */}\n          </>\n        ) : (\n          <>\n            <List>\n              <ListItem>\n                <ListItemIcon>\n                  <Checkbox edge=\"start\" />\n                </ListItemIcon>\n                <ListItemText\n                  primary={\n                    <Typography variant=\"h6\" component=\"div\">\n                      Phonebook\n                    </Typography>\n                  }\n                  secondary={\n                    <Typography variant=\"caption\" component=\"div\">\n                      {contacts.length + \" Contacts\"}\n                    </Typography>\n                  }\n                />\n                <InputBase placeholder=\"Search Contacts\" />\n                <IconButton edge=\"end\">\n                  <SearchIcon />\n                </IconButton>\n                <IconButton edge=\"end\" onClick={handleModalOpen}>\n                  <PersonAddIcon />\n                </IconButton>\n              </ListItem>\n            </List>\n            {/* <AppBar> */}\n            {/* <Toolbar>\n                <IconButton edge=\"start\">\n                  <CheckBox />\n                </IconButton>\n                <Typography variant=\"h6\" component=\"span\">\n                  Contacts\n                </Typography>\n                <div>\n\n                <InputBase placeholder=\"Search Contacts\" />\n                <IconButton edge=\"end\">\n                  <SearchIcon />\n                </IconButton>\n                </div>\n\n                <IconButton edge=\"end\" onClick={handleModalOpen}>\n                  <PersonAddIcon />\n                </IconButton>\n              </Toolbar> */}\n\n            {/* </AppBar> */}\n            {/* <Typography variant=\"h6\" component=\"span\">\n                Contacts\n              </Typography>\n\n              <Typography variant=\"h6\" component=\"span\">\n                Contacts\n              </Typography>\n              <InputBase placeholder=\"Search Contacts\" />\n              <IconButton edge=\"end\">\n                <SearchIcon />\n              </IconButton>\n\n              <IconButton edge=\"end\" onClick={handleModalOpen}>\n                <PersonAddIcon />\n              </IconButton> */}\n          </>\n        )}\n      </Paper>\n      // </ListSubheader>\n    );\n  };\n\n  return (\n    <>\n      <Grid container direction=\"row\" justify=\"center\">\n        <Paper className=\"contactList\">\n          <ListHeaderToolBar />\n          <List>\n            {contacts.map((contact) => {\n              const labelId = `checkbox-list-label-${contact.firstName}`;\n              const fnInitial = contact.firstName ? contact.firstName[0] : \"#\";\n              const lnInitial = contact.lastName ? contact.lastName[0] : \"\";\n              let avatarName = (fnInitial + lnInitial).toUpperCase();\n\n              return (\n                <ContactListItem\n                  key={contact.firstName + contact.lastName}\n                  contactInfo={contact}\n                  onDeleteContact={handleDelete}\n                  onAddContact={handleModalOpen}\n                  onSelectContact={handleContactSelect}\n                />\n              );\n            })}\n          </List>\n        </Paper>\n      </Grid>\n\n      {/* <Modal isOpen={modalOpen} onClose={handleModalClose} onAction={(e) => handleAddContact(e)}>\n        <AddContact\n          onAdd={(e) => handleAddContact(e)}\n          onCancel={handleModalClose}\n        />\n      </Modal> */}\n\n      <Dialog open={modalOpen} onClose={handleModalClose}>\n        <AddContact\n          onAdd={(e) => handleAddContact(e)}\n          onCancel={handleModalClose}\n        />\n      </Dialog>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}